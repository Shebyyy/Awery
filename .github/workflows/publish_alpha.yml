name: Build & Publish Alpha APK

on:
  push:
    branches:
      - master
    paths-ignore:
      - "docs/**"
      - "README.md"
      - "LICENSE.md"
      #- ".github/**"
      - ".run/**"

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      moblie_link: ${{ steps.gdriveUpload_moblie.outputs.web-content-link }}
      tv_link: ${{ steps.gdriveUpload_tv.outputs.web-content-link }}
    env:
      COMMIT_LOG: ""

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download last SHA artifact
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: publish_alpha.yml
          name: last-sha
          path: .
        continue-on-error: true

      - name: Get Commits Since Last Run
        run: |
          if [ -f last_sha.txt ]; then
          LAST_SHA=$(cat last_sha.txt)
          else
          LAST_SHA=$(git rev-list --max-parents=0 HEAD)
          fi
          echo "Commits since $LAST_SHA:"
          COMMIT_LOGS=$(git log "$LAST_SHA"..HEAD --pretty=format:"‚óè %s ~%an [÷ç](https://github.com/MrBoomDeveloper/Awery/commit/%H)" --max-count=10 --invert-grep --author="dependabot[bot]")
          COMMIT_LOGS=$(echo "$COMMIT_LOGS" | sed -E 's/#([0-9]+)/[#\1](https:\/\/github.com\/MrBoomDeveloper\/Awery\/pull\/\1)/g')
          COMMIT_LOGS="${COMMIT_LOGS//'%'/'%25'}"
          COMMIT_LOGS="${COMMIT_LOGS//$'\n'/'%0A'}"
          COMMIT_LOGS="${COMMIT_LOGS//$'\r'/'%0D'}"
          echo "COMMIT_LOG=${COMMIT_LOGS}" >> $GITHUB_ENV
          echo "$COMMIT_LOGS" > commit_log.txt
          BRANCH=${{ github.ref }}
          BRANCH=${BRANCH#refs/heads/}
          echo "BRANCH=${BRANCH}" >> $GITHUB_ENV
        continue-on-error: true

      - name: Save Current SHA for Next Run
        run: echo ${{ github.sha }} > last_sha.txt

      - name: Set variables
        run: |
          VER=$(grep -E -o "versionName \".*\"" app/build.gradle | sed -e 's/versionName //g' | tr -d '"')
          SHA=${{ github.sha }}
          VERSION="$VER+${SHA:0:7}"
          echo "Version $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Setup JDK 17
        if: ${{ env.SKIP_BUILD != 'true' }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Mobile Alpha APK
        id: build_alpha
        run: ./gradlew assembleAlphaMobileRelease -Pbuildkonfig.flavor=alpha

      - name: Build TV Alpha APK
        id: build_alpha_tv
        run: ./gradlew assembleAlphaTvRelease -Pbuildkonfig.flavor=alpha
        
#      - name: Build Alpha EXE
#        id: build_alpha_exe
#        run: ./gradlew packageExe -Pbuildkonfig.flavor=alpha

      - name: Sign Alpha APK
        if: success()
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/alphaMobile/release
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"
          
      - name: Sign Tv Alpha APK
        if: success()
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/alphaTv/release
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"

      - name: Rename Mobile Apk File
        run: |
          mv app/build/outputs/apk/alphaMobile/release/app-alpha-mobile-release-signed.apk app/build/outputs/apk/alphaMobile/release/awery-mobile-alpha.apk
          
      - name: Rename Tv Apk File
        run: |
          mv app/build/outputs/apk/alphaTv/release/app-alpha-tv-release-signed.apk app/build/outputs/apk/alphaTv/release/awery-tv-alpha.apk
      
      - name: Upload Mobile Apk
        uses: actions/upload-artifact@v4
        with:
          name: "Mobile Apk"
          retention-days: 90
          path: "app/build/outputs/apk/alphaMobile/release/awery-mobile-alpha.apk"
          
      - name: Upload Tv Apk
        uses: actions/upload-artifact@v4
        with:
          name: "Tv Apk"
          retention-days: 90
          path: "app/build/outputs/apk/alphaTv/release/awery-tv-alpha.apk"

      - name: Upload moblie File To Google Drive
        id: gdriveUpload_mobile
        uses: hoatruongdev09/google-drive-file-upload-github-action@v1.1
        with:
          file-path: app/build/outputs/apk/alphaMobile/release/awery-mobile-alpha.apk
          upload-name: Awery-mobile-alpha.apk
          upload-to-folder-id: 1vrkrvYCrhqR5Lt-RaDfP7hPM0IaIL54M #need to change it
          service-account-json: "${{secrets.GOOGLE_KEY}}"
          overrwrite: true
      
      - name: Upload tv File To Google Drive
        id: gdriveUpload_tv
        uses: hoatruongdev09/google-drive-file-upload-github-action@v1.1
        with:
          file-path: app/build/outputs/apk/alphaTv/release/awery-tv-alpha.apk
          upload-name: awery-tv-alpha.apk
          upload-to-folder-id: 1vrkrvYCrhqR5Lt-RaDfP7hPM0IaIL54M #need to change it
          service-account-json: "${{secrets.GOOGLE_KEY}}"
          overrwrite: true
          
      - name: Upload APK to Discord and Telegram
        shell: bash
        run: |
          # Truncate field values
          max_length=1024
          commit_messages=$(echo "$COMMIT_LOGS" | sed 's/%0A/\n/g; s/^/\n/')
          if [ ${#commit_messages} -gt $max_length ]; then
            commit_messages="${commit_messages:0:$max_length}"
          fi
          
          # Set default values if variables are empty
          : "${ping_variable:=<@&1208839371575529572>}"
          : "${commit_messages:=No commits available.}"
          : "${embed_color:=16711680}"  # Default red color
          # Construct Discord payload
          discord_data=$(jq -nc \
                            --arg content "$ping_variable" \
                            --arg field_value "$commit_messages" \
                            --arg footer_text "Version $VERSION" \
                            --arg timestamp "$(date -u +%Y-%m-%dT%H:%M:%S.000Z)" \
                            --arg thumbnail_url "${thumbnail_url:-https://i.imgur.com/sP4FR70.png}" \
                            --arg embed_color "$embed_color" \
                            '{
                              "content": $content,
                              "embeds": [
                                {
                                  "title": "New Alpha-Build dropped üî•",
                                  "color": ($embed_color | tonumber),
                                  "fields": [
                                    {
                                      "name": "Commits:",
                                      "value": $field_value,
                                      "inline": true
                                    }
                                  ],
                                  "footer": {
                                    "text": $footer_text
                                  },
                                  "timestamp": $timestamp,
                                  "thumbnail": {
                                    "url": $thumbnail_url
                                  }
                                }
                              ],
                              "attachments": []
                            }')
          echo "Debug: Final Discord payload is:"
          echo "$discord_data"
          # Send Discord message
            curl -H "Content-Type: application/json" \
               -d "$discord_data" \
               ${{ secrets.DISCORD_WEBHOOK_URL }}
              
          # Format commit messages for Telegram
          telegram_commit_messages=$(echo "$COMMIT_LOG" | sed 's/%0A/\n/g' | while read -r line; do
              message=$(echo "$line" | sed -E 's/‚óè (.*) ~(.*) \[÷ç\]\((.*)\)/‚óè \1 ~\2 <a href="\3">÷ç<\/a>/')
              message=$(echo "$message" | sed -E 's/\[#([0-9]+)\]\((https:\/\/github\.com\/[^)]+)\)/<a href="\2">#\1<\/a>/g')
              echo "$message"
          done)
          telegram_commit_messages="<blockquote>${telegram_commit_messages}</blockquote>"
          echo "$telegram_commit_messages"
         
          # Upload APK to Telegram
          response=$(curl -sS -f -X POST \
              "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKKEN}}/sendDocument" \
              -F "chat_id=-1002066701332" \
              -F "message_thread_id=737" \
              -F "caption=New Alpha-Build dropped üî•
              
          Commits:
          ${telegram_commit_messages}
          Version: ${VERSION}" \
              -d "parse_mode=HTML" \
              -d "disable_web_page_preview=true")
                      
        env:
          COMMIT_LOG: ${{ env.COMMIT_LOG }}
          VERSION: ${{ env.VERSION }}

      - name: Send Discord Notification with Download Links
        env:
          MOBLIE_LINK: ${{ needs.build-android.outputs.moblie_link }}
          TV_LINK: ${{ needs.build-android.outputs.tv_link }}
          
        run: |
          # Check and send individual Discord messages
          if [[ -n "$MOBLIE_LINK" ]]; then 
            MOBLIE_LINK="[Download]($MOBLIE_LINK) | **Moblie APK**"
          else
            MOBLIE_LINK=""
          fi

          if [[ -n "$TV_LINK" ]]; then 
            TV_LINK="[Download]($TV_LINK) | **TV APK**"
          else
            TV_LINK=""
          fi

          # Prepare and send the Discord message
          curl -H "Content-Type: application/json" \
               -d "{\"content\": \"üîπ ${MOBLIE_LINK}\nüîπ ${TV_LINK}\"}" \
               "${{ secrets.DISCORD_WEBHOOK_ALPHA }}"

      - name: Send Telegram Notification
        env:
          ANDROID_ARM64_LINK: ${{ needs.build-android.outputs.MOBLIE_link }}
          ANDROID_ARMEABI_LINK: ${{ needs.build-android.outputs.TV_link }}
        run: |
          TELEGRAM_MESSAGE="üéâ *${{ env.LATEST_TAG }} Released* üéâ
      
          üîπ [Download]($MOBLIE_LINK) | **Moblie APK**
          üîπ [Download]($TV_LINK) | **TV APK**
      
          curl -sS -f -X POST \
              "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
              -F "chat_id=-1002206819738" \
              -F "message_thread_id=174" \
              -F parse_mode="Markdown" \
              -F disable_notification=true \
              -F "text=$TELEGRAM_MESSAGE"

      - name: Upload Current SHA as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: last-sha
          path: last_sha.txt

      - name: Upload Commit log as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: commit-log
          path: commit_log.txt
